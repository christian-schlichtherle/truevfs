    -----------------------
    About TrueVFS Access
    -----------------------
    Christian Schlichtherle
    -----------------------

The TFile* Classes

    The <<<TFile*>>> classes provide simple, uniform, transparent, thread-safe,
    read/write access to archive files as if they were virtual directories in a
    file system path.

    This is the primary API for JSE&#160;6 compliant TrueVFS applications:
    Like the API of the module {{{../truevfs-access/index.html}TrueVFS Access Path}},
    this API is just a facade for the module
    {{{../truevfs-kernel/index.html}TrueVFS Kernel}}.
    In contrast to the TrueVFS Access Path API however, this API is limited
    to access the platform file system and any archive files within
    the platform file system.
    In contrast to the TrueVFS Kernel API, both APIs are designed to be
    easy to learn and convenient to use while providing a great level
    of flexibility.
    Because all virtual file system state is managed by the TrueVFS
    Kernel module, this module can concurrently access the same file
    systems than the TrueVFS Access Path module.

    For example, an application could access an entry within an archive
    file using a
    {{{./apidocs/net/truevfs/file/TFile.html}<<<TFile>>>}}
    like this:

+--+
File entry = new TFile("archive.zip/dir/HälloWörld.txt");
Writer writer = new TFileWriter(entry);
try {
    writer.write("Hello world!\n");
} finally {
    writer.close();
}
+--+

    This example presumes that the JARs of the driver modules
    {{{../truevfs-driver/truevfs-driver-file/index.html}TrueVFS Driver FILE}}
    and
    {{{../truevfs-driver/truevfs-driver-zip/index.html}TrueVFS Driver ZIP}}
    are present on the run time class path.

    For more examples, please use the Maven archetype for TrueVFS Access File* module
    applications as described in the
    {{{../kick-start/index.html}Kick-Starting TrueVFS}} section.
    You might also want to
    {{{http://repo1.maven.org/maven2/net/java/truevfs/truevfs-samples/${project.version}/truevfs-samples-${project.version}-sources.jar}download}}
    the source code of the module
    {{{../truevfs-samples/index.html}TrueVFS Samples}}.

    For the API documentation, please refer to the Javadoc of the package
    {{{./apidocs/net/truevfs/file/package-summary.html}<<<net.truevfs.file>>>}}

* Swing GUI

    This module also provides Swing GUI classes for viewing file trees
    and choosing entries in archive files.

    For the API documentation, please refer to the Javadoc of the package
    {{{./apidocs/net/truevfs/file/swing/package-summary.html}<<<net.truevfs.file.swing>>>}}

The TPath Class and its Companions

    Like the TFile* classes, the
    {{{./apidocs/net/truevfs/path/TPath.html}<<<TPath>>>}} class
    provides simple, uniform, transparent, thread-safe, read/write access to
    archive files as if they were virtual directories in a file system path.
    It also provides the
    {{{./apidocs/net/truevfs/path/TFileSystemProvider.html}<<<TFileSystemProvider>>>}}
    class to implement a file system provider for the NIO.2 API (JSR 203) in
    JSE&#160;7.

    This is the primary API for JSE&#160;7 compliant TrueVFS applications:
    Like the API of the module {{{../truevfs-access/index.html}TrueVFS Access File*}},
    this API is just a facade for the module
    {{{../truevfs-kernel/index.html}TrueVFS Kernel}}.
    In contrast to the TrueVFS Access File* API however, this API can access
    any (virtual) file system, not just the platform file system and
    any archive files within the platform file system.
    In contrast to the TrueVFS Kernel API, both APIs are designed to be
    easy to learn and convenient to use while providing a great level
    of flexibility.
    Because all virtual file system state is managed by the TrueVFS
    Kernel module, this module can concurrently access the same file
    systems than the TrueVFS Access File* module.

    For example, an application could access an entry within an archive
    file which is located at a web site using a
    {{{./apidocs/net/truevfs/path/TPath.html}<<<TPath>>>}}
    like this:

+--+
Path path = new TPath(new URI("http://acme.com/download/everything.tar.gz/README.TXT"));
try (InputStream in = Files.newInputStream(path)) {
    // Read archive entry contents here.
    ...
}
+--+

    This example presumes that the JARs of the driver modules
    {{{../truevfs-driver/truevfs-driver-http/index.html}TrueVFS Driver HTTP(S)}}
    and
    {{{../truevfs-driver/truevfs-driver-tar/index.html}TrueVFS Driver TAR}}
    are present on the run time class path.

    For more examples, please use the Maven archetype for TrueVFS Access Path module
    applications as described in the
    {{{../kick-start/index.html}Kick-Starting TrueVFS}} section.
    You might also want to
    {{{http://repo1.maven.org/maven2/net/java/truevfs/truevfs-samples/${project.version}/truevfs-samples-${project.version}-sources.jar}download}}
    the source code of the module
    {{{../truevfs-samples/index.html}TrueVFS Samples}}.

    For the API documentation, please refer to the Javadoc of the package
    {{{./apidocs/net/truevfs/path/package-summary.html}<<<net.truevfs.path>>>}}
