<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>News</title>
        <meta name="Author" content="Christian Schlichtherle"/>
    </head>
    <body>
        <h2><a name="20100921"></a>September 21<sup>st</sup>, 2010 - TrueZIP 6.8
            has been released</h2>
        <p>I am pleased to announce the release of TrueZIP 6.8.
            This is a maintenance release - it fixes classloading for OSGI
            environments, updates the Javadoc and fixes some issues with
            the unit tests for Swing GUI classes.</p>
        <p>Last, but not least, Maven is now used for the build and
            release process.
            The Maven Coordinates are
            <code>de.schlichtherle:truezip:jar:6.8</code>.
            You should soon see the artifacts appear in
            <a href="http://repo1.maven.org/maven2/de/schlichtherle/truezip/">Maven Central</a>.</p>
        <p>If and only if you are using TrueZIP to access TAR files or
            derivative archive file types, then you need to upgrade the run
            time dependency <code>ant.jar</code> to Ant 1.8.1.</p>
        <p>Upgrading is recommended for all users.</p>
        <p>For more details, please refer to
            the <a href="relnotes/release-6_8.html">Release Notes</a>.</p>
        <h2><a name="20100716"></a>July 16<sup>th</sup>, 2010 - TrueZIP 6.7
            has been released</h2>
        <p>
            I am pleased to announce the final release of TrueZIP 6.7.
            This is a feature and maintenance release.
            The primary objective of this release is to add transparent
            ZIP64 support and increase the interoperability of ZIP files
            with third party utilities such as Windows Explorer, WinZip,
            7-Zip and others.
            Upgrading is recommended for <em>all</em> users because there
            have been a few minor bug fixes since the Release Candidate 1.
        </p>
        <p>For more details, please refer to
            the <a href="relnotes/release-6_7.html">Release Notes</a>.</p>
        <h2><a name="20091103"></a>November 3<sup>rd</sup>, 2009 - TrueZIP 6.7 Release Candidate 1 has been
            released</h2>
        <p>
            I am pleased to announce Release Candidate 1 for TrueZIP 6.7.
            After two years since the release of version 6.6,
            this is a feature and maintenance release.
            The primary objective of this release is to increase the
            interoperability of ZIP files with third party utilities
            such as Windows Explorer, WinZip, 7-Zip and others.
            Upgrading is recommended for all users.
        </p>
        <p>
            Long awaited, this is the first release which supports ZIP64
            extensions.
            As far as I know TrueZIP 6.7 is the first open source Java
            implementation of ZIP64 extensions at all.
            This enables client applications to read and write ZIP archive
            files of more than 4GB size.
            Handling ZIP64 extensions is fully transparent for client
            applications, so there are no public API changes involved.
            By default, ZIP64 extensions are written to a ZIP file if and
            only if they are required so that maximum interoperability
            with third party tools is retained.
        </p>
        <p>
            Furthermore, a new date/time conversion algorithm has been
            introduced for plain ZIP files.
            This enhances accuracy of time stamps when exchanging ZIP files
            with third party tools like Windows Explorer, WinZip, 7-Zip
            and others.
            It also eliminates issues with the daylight saving time if the
            schedule has changed between the last modification time of an
            archive entry and the current system time.
            Of course, the date/time conversion algorithm for the JAR file
            family hasn't changed.
        </p>
        <p>
            Client applications using the high level API in the package
            <code>de.schlichtherle.io</code> automatically benefit from
            this enhancement.
            Client applications using the low level API in the package
            <code>de.schlichtherle.util.zip</code> need to subclass
            the class <code>ZipEntry</code> and override the method
            <code>getDateTimeConverter()</code>.
        </p>
        <p>
            I sincerely thank Roedy Green from Canadian Mind Products
            for prodding me at the issue with date/time conversion in
            plain ZIP files!
            I also sincerely thank everybody who has helped me to develop
            this version by donating to this project:
            Your donation is really appreciated - thank you very much!
        </p>
        <p>For more details, please refer to
            the <a href="relnotes/release-6_7.html">Release Notes</a>.</p>
        <h2><a name="20070403"></a>April 3<sup>rd</sup>, 2007 - TrueZIP 6.6 has been
            released</h2>
        <p>This is a maintenance release. For more details, please refer to
            the <a href="relnotes/release-6_6.html">Release Notes</a>. Upgrading is optional for all users.</p>
        <h2><a name="20070227"></a>February 27<sup>th</sup>, 2007 - TrueZIP 6.5.4 has been
            released</h2>
        <p>This is a feature and update release. TrueZIP 6.5.4 reads/writes OpenDocument
            Format (ODF) files, enhances creation and ordering of entries in archive files,
            enhances concurrency, enhances the Javadoc, fixes all known bugs and has been
            fortified with more unit tests and FindBugs. For more details, please refer to
            the <a href="relnotes/release-6_5.html">Release Notes</a>. Upgrading is recommended for all users.</p>
        <h2><a name="20061221"></a>December 21<sup>st</sup>, 2006 - TrueZIP 6.4 has been
            released</h2>
        <p>It's only a minor release number increase, but it's a major improvement:
            TrueZIP 6.4 fixes all known bugs, significantly improves performance in many
            sectors and comes with a rigorously updated Javadoc for the package <code>
                de.schlichtherle.io</code>.</p>
        <p>TrueZIP 6.4 is now a first class citizen on Linux, too: On this platform,
            previous releases where painfully slow when using RAES encrypted ZIP files and
            showed some bugs when using GUI classes like <code>JFileChooser</code> or the Swing based key
            manager implementation.</p>
        <p>A new feature has been added, too: When prompting for keys for RAES encrypted
            ZIP files on a JVM which is running in headless mode, TrueZIP 6.4 now prompts
            the user on the console. This feature requires JSE 6 as the runtime environment.</p>
        <p>Backwards compatibility is retained: TrueZIP 6.4 runs on any J2SE 1.4.2
            compliant JRE. Recompilation of existing applications is not required.</p>
        <p>For more information, please refer to the <a href="relnotes/release-6_4.html">Release
                Notes</a>. Upgrading is highly recommended for all users.</p>
        <h2><a name="20061010"></a>Oct. 10<sup>th</sup>, 2006 - TrueZIP 6.3.1 has been released</h2>
        <p>This is a minor bug fix release. A single typing error has been fixed which
            unfortunately rendered File.update/umount(File, ...) completely useless. A unit
            test has been added for File.update(File) in particular to test this in future. My apologies to all affected users - please upgrade.</p>
        <h2><a name="20061006"></a>Oct. 6<sup>th</sup>, 2006 - TrueZIP 6.3 has been released</h2>
        <p>This is a minor feature release which adds some new update to make it easier
            to update/unmount archive files safely in multithreaded environments. A few
            minor bugs have been fixed, too. For more information, please refer to the
            <a href="relnotes/release-6_3.html">Release Notes</a>.</p>
        <h2><a name="20060907"></a>Sep. 7<sup>th</sup>, 2006 - TrueZIP 6.2.1 has been
            released</h2>
        <p>This is a maintenance release.</p>
        <ol>
            <li><b>Enhanced:</b> Exception messages have been revised in various packages
                in order to provide more meaningful information, helping developers to
                understand the root cause.</li>
            <li><b>Fixed:</b> The methods <code>en/decrypt</code> in the class <code>
                    de.schlichtherle.io.RaesFileUtils</code> looked up the key using the normal
                path name instead of the canonical path name.</li>
        </ol>
        <p>The API has been kept fully backward compatible, so that client
            applications do not need to get recompiled.</p>
        <h2><a name="20060807"></a>Aug. 7<sup>th</sup>, 2006 - TrueZIP 6.2 and 5.1.8
            have been
            released</h2>
        <p>For TrueZIP 6.2, this is a maintenance and feature release. The primary focus has been
            to optimize multithreading performance, fix minor bugs and enhance the Javadoc. Updating is
            recommended for
            multithreaded environments such as application servers.</p>
        <p>The new feature in TrueZIP 6.2 is a really cool class which provides auto
            completion of file names in an attached JComboBox. This provides users with a
            very convenient way to browse their file system. Of course, this includes
            support for browsing archive files. Subclassing <code>JComboBox</code>.or using a
            particular <code>ComboBoxModel</code> is <i>not</i> required. Please refer to
            the Javadoc for the class
            <a href="nonav/javadoc-6/de/schlichtherle/io/swing/FileComboBoxBrowser.html">
                de.schlichtherle.io.swing.FileComboBoxBrowser</a> for more information.</p>
        <p>For TrueZIP 5.1.8, this is a bug fix release. It also marks the End Of Life
            for TrueZIP 5 as TrueZIP 7 has entered the design phase and maintenance of then
            three releases takes too much resources.</p>
        <p>For more information about the new releases, please refer to the...</p>
        <ul>
            <li><a href="relnotes/release-6_2.html">Release Notes for TrueZIP 6.2</a></li>
            <li><a href="relnotes/release-5_1_8.html">Release Notes for TrueZIP 5.1.8</a></li>
        </ul>
        <h2><a name="20060710"></a>Jul. 10<sup>th</sup>, 2006 - TrueZIP 6.1 and 5.1.7
            have been
            released</h2>
        <p>Another double release for TrueZIP. This is a bug fix and minor feature release. The primary focus has been
            to fix multithreading issues and enhance the Javadoc. The new feature is the
            extension of the ZIP archive driver family with CRC-32 checked versions for
            optional usage. Updating is considered critical for
            multithreaded environments such as application servers.</p>
        <p>For more information about the new releases, please refer to the...</p>
        <ul>
            <li><a href="relnotes/release-6_1.html">Release Notes for TrueZIP 6.1</a></li>
            <li><a href="relnotes/release-5_1_7.html">Release Notes for TrueZIP 5.1.7</a></li>
        </ul>
        <h2><a name="20060405"></a>Apr. 5<sup>th</sup>, 2006 - TrueZIP 6.0 and 5.1.6 have been
            released</h2>
        <p>The final version for TrueZIP 6.0 has been released. This is a major update
            with some exciting new features:</p>
        <ol>
            <li>A plug-in &quot;driver&quot; architecture for virtually any archive type. This
                allows third parties to provide support for arbitrary archive types.</li>

            <li>Out-of-the-box support for TAR, TAR.GZ and TAR.BZ2 archives
                using the new "plug-in driver" architecture. As usual with TrueZIP,
                this allows an application to address any entry in a TAR archive by
                specifying the archive as part of the path name, such as e.g. <code>"src.tar.gz/inner.zip/readme.html"</code>.</li>
            <li>Some minor bugs have been fixed, too. The majority of these bugs were
                found in the Swing components <code>PromptingKeyManager</code> (refactored
                from the former <code>PasswdManager</code>), <code>JFileChooser</code> and
                <code>JFileTree</code>.</li>
        </ol>
        <p>In fact, this is a double release: For maintenance reasons, TrueZIP 5.1.6 is
            also available now. This version should contain all the bug fixes which were
            introduced with TrueZIP 6.0, too.</p>
        <p>New applications should always use TrueZIP 6 for its enhanced architecture
            and performance. In case you used TrueZIP 5.X or a Release Candidate of TrueZIP 6, you need to
            recompile your client application. For more information about this release and migration from former releases,
            please refer to the <a href="relnotes/release-6_0.html">Release Notes for TrueZIP 6.0</a>.</p>
        <h2>Mar. 13<sup>th</sup>, 2006 - TrueZIP 6.0 Release
            Candidate 1 is available. This is a major update release with support
            for TAR, TAR.GZ and TAR.BZ2 archives.</h2>
        <p>TrueZIP 6.0 provides some exciting new features:</p>
        <ol>
            <li>A plug-in "driver" architecture for virtually any archive
                type. This allows third parties to provide support for arbitrary
                archive types, such as RAR or ARJ (volunteers wanted!).</li>
            <li>Out-of-the-box support for TAR, TAR.GZ and TAR.BZ2 archive
                using the new "plug-in driver" architecture. As usual with TrueZIP,
                this allows an application to address any entry in a TAR archive by
                specifying the archive as part of the path name, such as e.g. <code>"src.tar.gz/inner.zip/readme.html"</code>.</li>
            <li>ZIP64 is going to be added soon. However, it is still not
                decided yet whether this will be available with the official TrueZIP
                6.0 release or deferred to the release of TrueZIP 6.1 instead. I prefer
                to have short release cycles, so it is likely that you may see this in
                TrueZIP 6.1.</li>
        </ol>
        <h2>Mar. 6<sup>th</sup>, 2006 - TrueZIP 6.0 is in
            development. This will be a major update release with support for TAR
            archives and much more.</h2>
        <p>TrueZIP 6 will provide some exciting new features:</p>
        <ol>
            <li>A plug-in "driver" architecture for any archive type. This
                allows third parties to provide support for virtually any archive type,
                such as RAR or ARJ.</li>
            <li>Out-of-the-box support for TAR, TAR.GZ and TAR.BZ2 archive
                using the new archive "driver" architecture. As usual with TrueZIP,
                this will allow an application to address any entry in a TAR archive by
                specifying the archive as part of the path name, such as e.g. <code>"src.tar.gz/readme.html"</code>.</li>
            <li>Out-of-the-box support for ZIP64 archives in order to break
                the 4GB limitation of the current ZIP32 implementation. However, please
                note that in order to provide a short release cycle, this may be
                deferred to the release of TrueZIP 6.1 instead of TrueZIP 6.0.</li>
            <li>And some other goodies as well, but I don't want to promise
                too much yet...</li>
        </ol>
        <p>The current status is that the TAR support is already
            implemented and working (i.e. passes all JUnit tests). The archive
            driver interface has yet to be refactored again in order to remove all
            of the ZIP32 specific legacy. A beta release is planned for next week.
            This release will be stable (i.e. passes all JUnit tests), but may be
            subject to some more refactorings.</p>
        <p>Besides of all the good news, there is also some
            not-so-good-news: In order to abstract TrueZIP from ZIP32, some public
            API classes and interfaces had to be refactored. So if your application
            is not just using basic file I/O, it is likely that you will have to
            refactor some of your code. For this reason, TrueZIP 5.1 is and will be
            continued to be maintained, i.e. all bugs will be fixed and minor
            enhancements will be added (but no big features).</p>
        <p>So application developers have the choice to stay with TrueZIP
            5.1.X and be on the safe side in terms of bug fixes and regular
            maintenance or switching to TrueZIP 6 to take advantage of the support
            for all the new archive types.</p>
        <h2>Mar. 6<sup>th</sup>, 2006 - TrueZIP 5.1.5 has
            been released. This is a minor bug fix and maintenance release.</h2>
        <ol>
            <li><b>Fixed:</b> When using ZIP files created by
                other tools which contained dot or dot-dot directories in their entry
                name (e.g. <code>"./file.txt"</code>), TrueZIP wasn't able
                to address these entries properly.</li>
            <li><b>Fixed:</b> The constructors of the File
                class didn't ignore empty directory members (e.g. <code>"dir//file.txt"</code>)
                in path names.</li>
            <li><b>Fixed:</b> The last modification time
                attribute was copied when using a normal <code>File.copy*(*)</code>
                method instead of <code>File.archiveCopy*(*)</code>.</li>
            <li><b>Enhanced:</b> File constructor performance.
                This cuts down the runtime of some JUnit tests by a third!</li>
        </ol>
        <h2>Feb. 24<sup>th</sup>, 2006 - TrueZIP 5.1.2 has
            been released. This is a feature enhancement and bug fix release.</h2>
        <p>Following is a high level overview of the changes/add-ons (in
            order of priority):</p>
        <ol>
            <li><b>New:</b> New classes have been added to
                support <code>JTree</code> based traversal of directory
                trees, including support for any ZIP compatible file type of course.
                Please check out the classes <code> <a href="nonav/javadoc/de/schlichtherle/io/swing/JFileTree.html">
                        JFileTree</a></code>, <code> <a href="nonav/javadoc/de/schlichtherle/io/swing/tree/FileTreeModel.html">FileTreeModel</a></code>
                and <code> <a href="nonav/javadoc/de/schlichtherle/io/swing/tree/FileTreeCellRenderer.html">FileTreeCellRenderer</a></code>
                in the packages <code>de.schlichtherle.io.swing</code> and
                <code>de.schlichtherle.io.swing.tree</code>. The
                JFileTree class is a complete file system browser, providing GUI aware
                file operations like createNewFile, mkdir, copyTo, renameTo, delete,
                deleteAll, etc. It uses system icons for all nodes, provides options
                which control how to deal with suffixes, uses filters and allows you to
                rename files and directories by editing their node. A tutorial for this
                class should be added later.</li>
            <li><b>New:</b> TrueZIP is now able to read and
                update Self Extracting Archives, such as produced by WinZIP or JSmooth
                for example. However, please be aware that the SFX code of these
                applications does not tolerate updating their ZIP file contents. So
                once updated, you cannot use the SFX code anymore, but you can still
                use the regular tools (e.g. WinZIP or infoZIP) to access the updated
                ZIP file contents. This restriction is imposed by the SFX code and
                cannot be resolved by TrueZIP.</li>
            <li><b>New:</b> When using characters in file names
                which have no representation in the character set encoding of the
                target ZIP compatible file, then the TrueZIP API will fail gracefully
                with an IOException or a boolean return value of false (depending on
                the method's way to indicate an error condition). This is to protect
                applications from creating ZIP entries which cannot get encoded and
                decoded again correctly. An example is the Euro sign which does not
                have a representation in the IBM437 character set used by ordinary ZIP
                files.</li>
            <li><b>Enhanced:</b> The <a href="nonav/javadoc/de/schlichtherle/crypto/io/PasswdManager.html">PasswdManager</a>
                class has been refactored to allow easy programmatic setting of <a href="nonav/javadoc/de/schlichtherle/crypto/io/RaesParameters.html">RaesParameters</a>
                for a particular file without the need to implement a custom <a href="nonav/javadoc/de/schlichtherle/io/ZipDetector.html">ZipDetector</a>.</li>
            <li><b>Enhanced:</b> The <a href="nonav/javadoc/de/schlichtherle/crypto/io/swing/PasswdManager.html">
                    SwingPasswdManager</a> class now implements focus management for
                more convenient password editing.</li>
            <li><b>Enhanced:</b> The performance has been
                further enhanced by reimplementing the constructors of the <a href="nonav/javadoc/de/schlichtherle/io/File.html">File</a>
                class and the low level <a href="nonav/javadoc/de/schlichtherle/util/zip/ZipFile.html">ZipFile</a>
                class.</li>
            <li><b>Fixed:</b> Some minor bugs have been fixed,
                none of which caused ZIP file corruptions.</li>
            <li><b>Retained:</b> Binary compatibility of <code>truezip.jar</code>.</li>
            <li><b>Updated:</b> Project management files are
                now upgraded to NetBeans 5 and have been enhanced to support some
                versioning information in the source files.</li>
        </ol>
        <h2>Jan. 24<sup>th</sup>, 2006 - TrueZIP 5.0.1 has
            been released. This is a minor bug fix release.</h2>
        <p>A regression bug has been fixed which caused the <code>nzip</code>
            utility main class to identify ZIP and RAES encrypted ZIP files only
            instead of all known ZIP compatible file types (i.e. EAR, JAR, WAR, ZIP
            and RAES encrypted ZIP files).</p>
        <h2>Jan. 20<sup>th</sup>, 2006 - TrueZIP 5.0 has been
            released. This is a major update providing significant performance
            increases by using asynchronous I/O, various new features, reduced
            memory footprint, enhanced internal exception handling and an
            extensible architecture to support binary backwards compatibility for
            future releases. All users are recommended to upgrade.</h2>
        <p>Please note that you <b>must recompile</b> your
            applications if you are using older versions of TrueZIP. This is
            primarily because of the refactorings in the
            <code>File</code> and <code>ZipDetector</code>
            classes. Regular applications should not have to change a single of
            code, however. Because TrueZIP's public API is now completely relying
            on Dependency Injection, Factory and Decorator patterns, this is
            hopefully the last update requiring public API refactorings and hence
            the last increase of the major version number for a while.</p>
        <p>TrueZIP is used by commercial applications and so its primary
            objectives have always been stability and performance. Therefore,
            TrueZIP 5.0 has been tested with extended, comprehensive JUnit tests on
            the Windows, Linux and Mac OS X platform with a combination of JDK
            1.4.2_10 and JDK 1.5.0_06 and numerous manual tests in a special test
            parcours (located in the false positive directory <code>
                "1.zip"</code>) and with lots of ZIP files created by external
            tools, such as WinZIP, infoZIP and JSmooth.</p>
        <p>Following is a high level overview of the changes/add-ons (in
            order of priority):</p>
        <ol>
            <li><b>Enhanced:</b> All <code>cat</code>
                and <code>copy</code> methods in the <code>File</code>
                class now use asynchronous IO similar to the <code>
                    transfer(...) </code>method of the <code>java.nio.Channel</code>
                class. Various tests have shown that this cuts down the gross execution
                time for copying a file within the same folder by about 33%! Depending
                on the system configuration and source and target file location and
                size, your results may be even better! Because this is all based on the
                method<code> File.cat(InputStream, OutputStream)</code>,
                you can use this feature for any kind of input or output stream in your
                applications!</li>
            <li><b>New/Enhanced:</b> The <code>SwingPasswdManager</code>
                class, which is used by default to manage encryption keys for RAES
                encrypted ZIP files, now also supports <b> key file based
                    encryption</b> in addition to only <b>password based
                    encryption</b>. All dialogs have been improved to enhance their
                overall usability.</li>
            <li><b>Changed:</b> The <code>ZipDetector</code>
                interface has been completely refactored to a factory pattern in order
                to support dependency injection for all required resources in the <code>de.schlichtherle.io</code>
                package (such as <code> ZipFile</code> and <code>ZipOutputStream</code>
                instances). Its member constant default implementations have been
                retained and extended however, so that regular applications should not
                be affected by this change unless they implement this interface.</li>
            <li><b>New:</b> The <code>copyAll</code>
                methods of the <code>File</code> class have new members
                which allow you to provide different <code> ZipDetector</code>
                instances for the source and destination directory tree. This allows
                you to do fancy stuff like changing the character set encoding of ZIP
                file entry names or unzipping a complete directory tree with
                recursively enclosed ZIP compatible files on the fly with a single API
                call. Please refer to the </li>
            <li><b>Fixed:</b> One <b>major</b>
                bug: If a ZIP compatible file created by an external application (such
                as WinZIP) contained any <code>STORED</code> instead of
                just <code>DEFLATED</code> entries (see PKWARE's
                <a href="http://www.pkware.com/documents/casestudies/APPNOTE.TXT">
                    ZIP File Format Specification
                </a>), updating its content caused the
                resulting ZIP compatible file to be corrupted.</li>
            <li><b>Fixed:</b> Various minor bugs, most of them
                about proper exception handling. TrueZIP's internal exception handling
                strategy is now pretty elaborate and should cause TrueZIP to fail
                gracefully in any case.</li>
        </ol>
        <h2>Dec. 19<sup>th</sup>, 2005 - TrueZIP 4.0 has been
            released. This is a major update. All users are recommended to upgrade.</h2>
        <p>In order of priority:</p>
        <ol>
            <li><b>Enhanced:</b> TrueZIP now correctly
                recognizes and handles <b>all</b> kinds of <i>false
                    positive ZIP compatible files</i>. A false positive ZIP
                compatible file is a file or directory or a file or directory entry in
                an enclosing ZIP compatible file which looks like a ZIP compatible file
                by its path name (e.g. <code>"archive<b>.zip</b>"</code>
                or <code>"outer.zip/inner.zip/secret<b>.tzp</b>"</code>),
                but actually is a plain file or directory or an RAES encrypted ZIP file
                which's password could not be successfully requested from the user. The
                previous version only recognized and handled false positives which were
                actually plain files in the file system. Please note that TrueZIP does <i>not</i>
                (and never did and presumably never will) check the existence or
                integrity of the manifest in a JAR, EAR or WAR.</li>
            <li><b>Enhanced/fixed:</b> TrueZIP now provides its
                own implementation of the standard ZIP character set <code>IBM437</code>
                (a.k.a. <code>CP437</code>, the original IBM PC character
                set for the United States and others). Previous versions silently
                reverted to <code>UTF-8</code> (this is what Sun's <code>
                    java.util.zip</code> package erratically uses) if <code>CP437</code>
                is not installed in the JRE. However, at least on the Windows platform,
                <code>CP437</code> is only installed if the
                user/administrator chose to install the international character sets in
                <code>$java.home/lib/charsets.jar</code>, which is more
                or less unlikely.</li>
            <li><b>Fixed:</b> Primarily a lot of bugs in the
                exception handling code (see above), but most notably the methods <code>
                    <a href="nonav/javadoc/de/schlichtherle/io/File.html#renameTo%28java.io.File%29">File.renameTo()</a></code>
                and <code> <a href="nonav/javadoc/de/schlichtherle/io/File.html#archiveCopyAllTo%28java.io.File%29">
                        File.archiveCopyAll*()</a></code> now treat directory
                timestamps correctly and refuse to rename/copy into themselves.</li>
            <li><b>New/changed:</b> The <code> <a href="nonav/javadoc/de/schlichtherle/crypto/io/PasswdManager.html">
                        PasswdManager</a></code> class, which is used to prompt
                users for passwords for <a href="#News_RAES">RAES</a>
                encrypted ZIP files, has been refactored to the package <code>de.schlichtherle.crypto.io</code>
                and heavily redesigned: For end users, the new version supports
                cancellation of password prompts for new encrypted ZIP files and
                automatically highlights file paths when they change. For application
                developers, a mechanism has been added to provide a custom password
                manager in case they don't want to use the default Swing based
                implementation. For more information, please refer to the <a href="nonav/javadoc/de/schlichtherle/crypto/io/PasswdManager.html">
                    <code>PasswdManager</code> class JavaDoc</a>.</li>
            <li><b>New:</b> Some new methods have been added to
                the File class for convenience. Please check out the <a href="nonav/javadoc/de/schlichtherle/io/File.html"> <code>
                        File</code> class Javadoc</a>.</li>
            <li><b>New:</b> New utility methods and main
                classes have been added to provide encryption and decryption of
                ordinary files into and from the RAES format. Please check out the
                source of the new main classes <code> <a href="nonav/source/browse/truezip/src/encrypt.java?view=markup">
                        encrypt</a></code>, <code> <a href="nonav/source/browse/truezip/src/decrypt.java?view=markup">
                        decrypt</a></code> and the JavaDoc for the utility class <code>
                    <a href="nonav/javadoc/de/schlichtherle/io/RaesFileUtils.html">de.schlichtherle.io.RaesFileUtils</a></code>.</li>
            <li><b>Enhanced:</b> For large ZIP compatible files
                (e.g. 2 GB) with thousands of entries (e.g. 24k) there is now a huge
                performance increase to mount the ZIP file system and update the target
                ZIP file.</li>
            <li><b>New/changed:</b> The <a href="nonav/javadoc/de/schlichtherle/io/rof/ReadOnlyFile.html">
                    ReadOnlyFile</a> interface, which is part of the low level API
                and is used to read the ZIP file structure from plain or RAES encrypted
                files, and its companion implementation classes have been refactored to
                their own package <code> de.schlichtherle.io.rof</code>.
                New implementation classes which use NIO channels and memory mapped
                files are provided, too. Please note that these classes are not used
                within TrueZIP because of some painful bugs in the J2SE API on certain
                platforms (e.g. Windows and Linux). Please use where appropriate only.</li>
            <li><b>Enhanced:</b> The logging of the
                ZipController class has been enhanced. Please refer to the
                configuration file <code> <a href="nonav/source/browse/truezip/logging.properties?view=markup">
                        logging.properties</a></code> for more information.</li>
        </ol>
        <p>Please note that you should recompile your applications if you
            are using older versions of TrueZIP, unless you are only <b>using
            </b>(i.e. not implementing or subclassing interfaces or classes
            in) the High-Level-API, which consists of all classes in the package <code>
                <a href="nonav/javadoc/de/schlichtherle/io/package-summary.html">de.schlichtherle.io</a></code>
            and the class <code>
                <a href="nonav/javadoc/de/schlichtherle/io/swing/FileSystemView.html">de.schlichtherle.io.swing.FileSystemView</a></code>.
            This is because the low level API has been heavily refactored and some
            of these changes emanate into the High-Level-API in order to support
            the new password manager for RAES encrypted ZIP files.</p>
        <h2>Dec. 5<sup>th</sup>, 2005 - TrueZIP 3.3 has been
            released. This is primarily a bug fix release. All users are
            recommended to upgrade.</h2>
        <ul>
            <li>The <tt> <a href="nonav/source/browse/truezip/src/de/schlichtherle/io/swing/JFileChooser.java?view=markup">
                        JFileChooser</a></tt> and <tt> <a href="nonav/source/browse/truezip/src/de/schlichtherle/io/swing/FileSystemView.java?view=markup">
                        FileSystemView</a></tt> classes in the package <tt>de.schlichtherle.io.swing</tt>
                have been fixed so that they work (almost) correctly now. Please note
                that there are still some minor issues left which unfortunately cannot
                get fixed because they are caused by the <i>completely broken
                    design and implementation</i> of the <tt>JFileChooser</tt>,
                <tt>FileSystemView</tt> and companion classes in the
                genuine Java API (caused by scattered responsibilities for file
                properties and the implementation's heavy dependency on the API private
                <tt>ShellFolder</tt> class). However, I'm pretty
                confident that most users should hardly be able to tell a difference
                now.</li>
            <li>TrueZIP's error handling has been further enhanced so that
                it now fails more gracefully on some odd (and unlikely) events in the
                native file system.</li>
            <li>Support for Apple's Java 1.5 Release 1 on Mac OS X has been
                enhanced. Many, many thanks to Dr. Simon White from Catalysoft,
                Cambridge, UK for spending many hours to tackle down this issue.</li>
            <li>A multithreading issue has been fixed which may have caused
                NullPointerException(s) somewhere deep in the Java regex API.</li>
            <li>Last but not least, TrueZIP now provides basic support for
                Java's logging API in its package private class <tt> <a href="nonav/source/browse/truezip/src/de/schlichtherle/io/ZipController.java?view=markup">
                        ZipController</a></tt>. If you ever wondered what happens
                under the hood of TrueZIP and when the <tt>update() </tt>or
                <code>umount()</code> method of the class <tt> <a href="nonav/source/browse/truezip/src/de/schlichtherle/io/File.java?view=markup">
                        File</a> </tt>is automatically called, it is recommended
                to consult the file <tt> <a href="nonav/source/browse/truezip/logging.properties?view=markup">
                        logging.properties</a></tt> in the source code distribution
                and edit it in order to log important events within TrueZIP.</li>
        </ul>
        <h2>Oct. 22<sup>nd</sup>, 2005 - TrueZIP 3.2 has been
            released. This is a maintenance release. All users are recommended to
            upgrade.</h2>
        <ul>
            <li>A bug in the conversion from DOS time (used in ZIP files)
                to Java/Unix time has been fixed.</li>
            <li>The password dialogs now emit a beep before showing and
                properly display on JDK 5.</li>
            <li>The performance of direct copying from a ZIP file entry to
                another ZIP file entry (maybe in the same ZIP file) has been slightly
                enhanced.</li>
            <li>The class <code>de.schlichtherle.io.swing.DefaultRaesZipDetector</code>
                has been refactored to <code> <a href="nonav/source/browse/truezip/src/de/schlichtherle/io/DefaultRaesZipDetector.java?view=markup">
                        de.schlichtherle.io.DefaultRaesZipDetector</a></code>.</li>
        </ul>
        <h2>Oct. 22<sup>nd</sup>, 2005 - TrueZIP 3.1 has been
            released. This version provides transparent access to RAES encrypted
            ZIP files, fixes some bugs and offers performance and memory
            optimizations. All users are recommended to upgrade.</h2>
        <h3><b><a name="News_RAES">Encryption</a></b></h3>
        <p>
            TrueZIP has been extended to provide transparent access to
            regular ZIP files which have been encrypted according to the Random
            Access Encryption Specification (RAES).
        </p>
        <p>
            RAES has been developed because there is a significant need to
            encrypt ZIP files. However, existing de-facto standards are either
            patent bombed, such as PKWARE's
            <a href="http://www.pkware.com/documents/casestudies/APPNOTE.TXT">
                AES encryption
            </a> feature, or known to be more or less vulnerable as the
            article
            <a href="http://www.cs.washington.edu/homes/yoshi/papers/WinZip/winzip.pdf">
                "Attacking and Repairing the WinZip Encryption Scheme"
            </a>
            from Tadayoshi Kohno about WinZIP's
            <a href="http://www.winzip.com/aes_info.htm">
                proprietary AES encryption
            </a>
            feature documents.
            Hence the need for a new format.
            However, this time the format (RAES) is designed to provide
            maximum security and flexibility as an extensible open source
            specification with an open source reference implementation as
            part of TrueZIP.
        </p>
        <p>
            RAES is a file wrapping format that has been designed to
            provide secure, random access to arbitrary encrypted file contents -
            encrypting ZIP files is just one its applications. RAES features
            encryption according to the
            <a href="http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf">Advanced
                Encryption Standard (AES)</a> with variable key sizes of 128, 192
            and 256 bits. In order to provide maximum security, RAES encrypts the
            entire ZIP file (the content) and operates AES in
            <a href="http://csrc.nist.gov/CryptoToolkit/modes/workshop1/papers/lipmaa-ctr.pdf">Counter
                Mode (CTR)</a>, whereby its parameters are derived from a
            password according to the
            <a href="ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12v1.pdf">Public
                Key Cryptography Standard # 12 (PKCS #12)</a>. For parameter
            derivation, Message Authentication (MAC) and Pseudo Random Number
            Generation (PRNG), RAES uses the the
            <a href="http://csrc.nist.gov/publications/fips/fips180-2/fips180-2.pdf">Secure
                Hash Algorithm with 256 bit output (SHA-256)</a>. RAES is an
            extensible format - the next version is intended to provide certificate
            based encryption and authentication according to PKCS #12.
        </p>
        <p>
            For more information about RAES, please refer to the class <code>
                RandomAccessEncryptionSpecification</code> in the package <code>
                de.schlichtherle.crypto.io</code>. If you would like to use an
            easy interface for reading and writing RAES files yourself, please
            check the RAES reference implementation classes <code>RaesReadOnlyFile</code>
            and <code>RaesOutputStream</code> in the same package.
        </p>
        <p>
            Please note that some refactorings were necessary to introduce
            RAES encryption (most notably in the <code>ZipDetector</code>
            class) and consequently, all code marked as deprecated in previous
            versions has been removed. However, most applications should not be
            affected by this.
        </p>
        <h3>Bugs fixed</h3>
        <p>The bugs fixed for version 3.0 include, but are not limited to:</p>
        <ul>
            <li>The interpretation of dot directories (<code>"."</code>
                and <code>".."</code>) is now correct.</li>
            <li>TrueZIP is now aware of some specifics of the file system
                and J2SE behavior on Mac OS X. In particular, file name comparison is
                now working correctly.</li>
            <li>Previous versions could deadlock or behave erratically when
                used in multithreading applications.</li>
            <li><code>JFileChooser</code> caused a <code>NullPointerException</code>
                if going up one directory on the Windows Desktop.</li>
            <li>Writability tests have been fixed not to alter the last
                modification time if a file is already opened on Windows.</li>
            <li>Various other minor fixes.</li>
        </ul>
        <p>Bugs fixed for version 3.1:</p>
        <ul>
            <li>A bug in the update strategy could have caused some
                directory time stamps to be incorrect if an application is accessing
                corrupted ZIP files.</li>
            <li>The password manager now always resets the password display
                if prompting for new passwords.</li>
        </ul>
        <p>A special thanks to Dr. Simon White for helping me to identify
            some of the bugs.</p>
        <h3>Optimizations</h3>
        <p>The performance and memory optimizations include, but are not
            limited to:</p>
        <ul>
            <li>A new <code>File.update()</code> strategy
                offers enhanced performance by reducing I/O.</li>
            <li>The memory footprint of the class <code>ZipEntry</code>
                has been slightly reduced. This may be important if you use ZIP files
                with thousands of entries.</li>
        </ul>
        <h3>Miscellaneous</h3>
        <p>A lot of new unit tests have been added in order to further
            harness the library and reduce the likeliness of bugs.</p>
        <p>As usual, some work on the Javadoc has been spent to enhance
            it.</p>
    </body>
</html>
