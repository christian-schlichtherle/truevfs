    -----------------------
    Using TrueZIP Without Maven
    -----------------------
    Christian Schlichtherle
    -----------------------

Using TrueZIP Without Maven

    TrueZIP is a multi-module project which is built by
    {{{http://maven.apache.org}Apache Maven}}, so all its artifacts are hosted
    on {{{http://search.maven.org}Maven Central}}.

    If you do not want to use Maven however, then you can easily download the
    TrueZIP artifacts for the current release
    <<TrueZIP&#160;${project.version}>> from the
    {{{http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22de.schlichtherle.truezip%22%20AND%20v%3A%22${project.version}%22}Search Engine for Maven Central}}.

    After all, TrueZIP ships as a bunch of JARs.
    Fortunately, there is an all-in-one JAR available for download at Maven
    Central.
    To locate it, browse to {{http://search.maven.org}} and do an advanced
    search for the Group Id <<<de.schlichtherle.truezip>>>, the Artifact Id
    <<<truezip-samples>>> and the classifier <<<jar-with-dependencies>>>, or
    just click
    {{{http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22de.schlichtherle.truezip%22%20AND%20a%3A%22truezip-samples%22%20AND%20l%3A%22jar-with-dependencies%22}here}}.
    For TrueZIP ${project.version}, you could also directly download it from
    {{{http://repo1.maven.org/maven2/de/schlichtherle/truezip/truezip-samples/${project.version}/truezip-samples-${project.version}-jar-with-dependencies.jar}here}}.

    This all-in-one JAR saves you from grabbing the module JARs individually.
    However, as the name implies, it includes all sample code which bloats the
    code size of the application.
    More importantly, this will also initially set up the TrueZIP File* API to
    detect all canonical file suffixes of all supported archive file types
    in TrueZIP ${project.version} - see the table at the end of this page.
    This may yield the following unwanted side effects on any unintended access
    to an archive file:

    * The virtual file system of an archive file is automatically mounted.

        * This may confuse the application because the archive file
          unexpectedly behaves like a directory instead of like a file.

	* In case of TAR files, this can be considerably slow because they do
          not provide a central directory which causes the driver to unpack the
          entire archive file into a temporary directory.

        * In case of an EXE file, an attempt is made to locate the central
          directory of a self extracting ZIP file which causes the entire file
          to be read.

    * A Swing or console based dialog prompts the user for a password to access
      a RAES encrypted ZIP file.

    []

    In order to avoid these unwanted side effects, you should <always>
    configure the TrueZIP File* API to detect exactly only the file suffixes
    of the archive types required to access.
    {{{../usecases/aff.html}Here}} is a sample available for this task.
    For further information, please refer to the Javadoc for the class
    {{{../apidocs/de/truezip/file/TArchiveDetector.html}<<<TArchiveDetector>>>}}
    .

* Initial Setup

    Following are the canonical archive file suffixes which will be detected
    by an application using the TrueZIP File* API according to the initial set
    up of the JAR <<<truezip-samples-${project.version}-jar-with-dependencies.jar>>>:

*--*--*
||Canonical File Suffixes||File System Driver Class|
*--+--+
|<<<ear>>>, <<<jar>>>, <<<war>>>|{{{../apidocs/de/truezip/driver/zip/JarDriver.html}<<<JarDriver>>>}}|
*--+--+
|<<<exe>>>|{{{../apidocs/de/truezip/driver/zip/ReadOnlySfxDriver.html}<<<ReadOnlySfxDriver>>>}}|
*--+--+
|<<<odt>>>, <<<ott>>>, <<<odg>>>, <<<otg>>>, <<<odp>>>, <<<otp>>>, <<<ods>>>, <<<ots>>>, <<<odc>>>, <<<otc>>>, <<<odi>>>, <<<oti>>>, <<<odf>>>, <<<otf>>>, <<<odm>>>, <<<oth>>>, <<<odb>>>|{{{./apidocs/de/truezip/driver/zip/OdfDriver.html}<<<OdfDriver>>>}}|
*--+--+
|<<<tar>>>|{{{../apidocs/de/truezip/driver/tar/TarDriver.html}<<<TarDriver>>>}}|
*--+--+
|<<<tar.bz2>>>, <<<tb2>>>, <<<tbz>>>|{{{../apidocs/de/truezip/driver/tar/TarBZip2Driver.html}<<<TarBZip2Driver>>>}}|
*--+--+
|<<<tar.gz>>>, <<<tgz>>>|{{{../apidocs/de/truezip/driver/tar/TarGZipDriver.html}<<<TarGZipDriver>>>}}|
*--+--+
|<<<tzp>>>, <<<zip.rae>>>, <<<zip.raes>>>|{{{../apidocs/de/truezip/driver/zip/raes/SafeZipRaesDriver.html}<<<SafeZipRaesDriver>>>}}|
*--+--+
|<<<zip>>>|{{{../apidocs/de/truezip/driver/zip/ZipDriver.html}<<<ZipDriver>>>}}|
*--+--+
