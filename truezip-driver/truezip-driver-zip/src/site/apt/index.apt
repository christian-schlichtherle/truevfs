    -----------------------
    About
    -----------------------
    Christian Schlichtherle
    -----------------------

About

    This module contains the file system driver service class
    {{{../../apidocs/de/schlichtherle/truezip/fs/archive/zip/ZipDriverService.html}ZipDriverService}}
    which provides the following map of file system drivers:

*--*--*
||URI Schemes||File System Driver Class|
*--+--+
|<<<ear>>>, <<<jar>>>, <<<war>>>|{{{../../apidocs/de/schlichtherle/truezip/fs/archive/zip/JarDriver.html}<<<JarDriver>>>}}|
*--+--+
|<<<exe>>>|{{{../../apidocs/de/schlichtherle/truezip/fs/archive/zip/ReadOnlySfxDriver.html}<<<ReadOnlySfxDriver>>>}}|
*--+--+
|<<<odb>>>, <<<odf>>>, <<<odg>>>, <<<odm>>>, <<<odp>>>, <<<ods>>>, <<<odt>>>, <<<otg>>>, <<<oth>>>, <<<otp>>>, <<<ots>>>, <<<ott>>>|{{{../../apidocs/de/schlichtherle/truezip/fs/archive/zip/OdfDriver.html}<<<OdfDriver>>>}}|
*--+--+
|<<<zip>>>|{{{../../apidocs/de/schlichtherle/truezip/fs/archive/zip/ZipDriver.html}<<<ZipDriver>>>}}|
*--+--+

    Add the JAR artifact of this module to the run time class path to
    make its file system drivers available for service location in the
    client API modules.

Key Features

    [Recovery Of Lost ZIP Entries]
    When reading truncated ZIP files, lost entries can get recovered.

    To use this feature with a client API, you don't need to do anything.
    This happens automatically if you use any of the file system drivers for
    reading ZIP files.

    To use this feature with the ZIP API, call
    {{{../../apidocs/de/schlichtherle/truezip/zip/ZipFile.html#recoverLostEntries()}<<<ZipFile.recoverLostEntries()>>>}}.

    [Appending To Existing ZIP Files]
    New ZIP entries can get appended to existing ZIP files using a client API
    with a file system driver or the ZIP classes directly.

    To use this feature with a client API, set
    {{{../../apidocs/de/schlichtherle/truezip/fs/FsOutputOption.html#GROW}<<<FsOutputOption.GROW>>>}},
    e.g. in
    {{{../../apidocs/de/schlichtherle/truezip/file/TConfig.html#setOutputPreferences(de.schlichtherle.truezip.util.BitField)}<<<TConfig.setOutputPreferences(BitField)>>>}}.

    To use this feature with the ZIP API, call
    {{{../../apidocs/de/schlichtherle/truezip/zip/ZipOutputStream.html#ZipOutputStream(java.io.OutputStream,de.schlichtherle.truezip.zip.ZipFile)}<<<ZipOutputStream(OutputStream, ZipFile)>>>}}.

    [WinZip AES Encryption And Authentication]
    When reading or writing a ZIP file, ZIP entry data can get encrypted and
    authenticated according to the
    {{{http://www.winzip.com/win/en/aes_info.htm}WinZip AES specification}}.

    To use this feature with a client API, set
    {{{../../apidocs/de/schlichtherle/truezip/fs/FsOutputOption.html#ENCRYPT}<<<FsOutputOption.ENCRYPT>>>}}
    or provide a custom file system driver which sets this option before
    calling its super-class implementation in
    {{{../../apidocs/de/schlichtherle/truezip/fs/archive/zip/ZipDriver.html#newEntry(java.lang.String,de.schlichtherle.truezip.fs.entry.Entry.Type,de.schlichtherle.truezip.fs.entry.Entry,de.schlichtherle.truezip.util.BitField)}<<<ZipDriver.newEntry(String, Entry.Type, Entry, BitField)>>>}}.
    You may want to override
    {{{../../apidocs/de/schlichtherle/truezip/fs/archive/zip/ZipDriver.html#zipCryptoParameters(de.schlichtherle.truezip.fs.FsModel,java.nio.charset.Charset)}<<<ZipDriver.zipCryptoParameters(FsModel, Charset)>>>}}
    in order to provide custom WinZip AES parameters, too.

    To use this feature with the ZIP API, call
    {{{../../apidocs/de/schlichtherle/truezip/zip/ZipEntry.html#setEncrypted(boolean)}<<<ZipEntry.setEncrypted(boolean)>>>}}
    first.
    Then call
    {{{../../apidocs/de/schlichtherle/truezip/zip/ZipFile.html#setCryptoParameters(de.schlichtherle.truezip.zip.ZipCryptoParameters)}<<<ZipFile.setCryptoParameters(ZipCryptoParameters)>>>}}
    or
    {{{../../apidocs/de/schlichtherle/truezip/zip/ZipOutputStream.html#setCryptoParameters(de.schlichtherle.truezip.zip.ZipCryptoParameters)}<<<ZipOutputStream.setCryptoParameters(ZipCryptoParameters)>>>}}
    respectively.

    [BZIP2 Compression]
    BZIP2 compressed ZIP entry data gets read transparently.

    To use this feature with a client API, provide a custom file system driver
    which overrides
    {{{../../apidocs/de/schlichtherle/truezip/fs/archive/zip/ZipDriver.html#getMethod()}<<<ZipDriver.getMethod()>>>}}.

    To use this feature with the ZIP API, call
    {{{../../apidocs/de/schlichtherle/truezip/zip/ZipEntry.html#setMethod(int)}<<<ZipEntry.setMethod(int)>>>}}

    [ZIP64 Extensions]
    ZIP64 extensions are automatically and transparently activated when reading
    or writing ZIP files of more than 4 GB size.

    [Selectable Character Sets]
    The character set for reading and writing ZIP comments and ZIP entry names
    can get set when using a file system driver or the ZIP classes directly.

    To use this feature with a client API, provide a custom file system driver
    which overrides
    {{{../../apidocs/de/schlichtherle/truezip/fs/archive/zip/ZipDriver.html#getCharset()}<<<ZipDriver.getCharset()>>>}}.

    To use this feature with the ZIP API, call
    {{{../../apidocs/de/schlichtherle/truezip/zip/ZipOutputStream.html#ZipOutputStream(java.io.OutputStream,java.nio.charset.Charset)}<<<ZipOutputStream(OutputStream, Charset)>>>}}
    or
    {{{../../apidocs/de/schlichtherle/truezip/zip/ZipFile.html#ZipFile(java.io.File,java.nio.charset.Charset)}<<<ZipFile(File, Charset)>>>}}.

    [External File Attributes]
    External file attributes can get used to set executable bits for third
    party tools, etc.
    This requires direct use of the ZIP classes.
    See {{{../../apidocs/de/schlichtherle/truezip/zip/ZipEntry.html#setExternalAttributes(long)}<<<ZipEntry.setExternalAttributes(long)>>>}}.

    []
